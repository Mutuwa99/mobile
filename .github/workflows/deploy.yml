name: Deploy to EC2

on:
  push:
    branches:
      - main
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history to allow diff comparison

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Show changed files and folders
        run: |
          echo "Checking for changed files and directories..."
          git diff --name-status ${{ github.event.before }} ${{ github.sha }} | while read status file; do
            echo "File: $file, Status: $status"
          done

      - name: Check and deploy MC directory if changed
        id: check_mc
        run: |
          echo "Checking for changes in the MC directory..."
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep "^MC/"; then
            echo "MC directory has changed."
            echo "deploy_mc=true" >> $GITHUB_ENV
          else
            echo "No changes in MC directory."
          fi

      - name: Backup and deploy MC directory to EC2
        if: env.deploy_mc == 'true'
        run: |
          # echo "Cleaning up existing backups in the MC directory on EC2..."
          # ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null mutuwa@${{ secrets.SERVER_HOST }} "
          #   # Find and remove existing backup files before creating a new one
          #   find /var/www/html/Mobile/MC/*.bak.* -type f -exec rm -f {} \;
          # "
          # echo "Renaming existing files in the MC directory on EC2..."
          # ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null mutuwa@${{ secrets.SERVER_HOST }} "
          #   for file in /var/www/html/Mobile/MC/*; do
          #     if [[ -f \$file ]]; then
          #       mv \$file \${file}.4-sure.bak.\$(date +'%Y%m%d%H%M%S')
          #     fi
          #   done
          # "
          echo "Deploying new MC APK to the server..."
          scp -r -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null "$GITHUB_WORKSPACE/MC"/* mutuwa@${{ secrets.SERVER_HOST }}:/var/www/html/Mobile/MC/

      - name: Check and deploy SIL directory if changed
        id: check_sil
        run: |
          echo "Checking for changes in the SIL directory..."
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep "^SIL/"; then
            echo "SIL directory has changed."
            echo "deploy_sil=true" >> $GITHUB_ENV
          else
            echo "No changes in SIL directory."
          fi

      - name: Backup and deploy SIL directory to EC2
        if: env.deploy_sil == 'true'
        run: |
          echo "Cleaning up existing backups in the SIL directory on EC2..."
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null mutuwa@${{ secrets.SERVER_HOST }} "
            # Find and remove existing backup files before creating a new one
            find /var/www/html/Mobile/SIL/*.bak.* -type f -exec rm -f {} \;
          "
          echo "Renaming existing files in the SIL directory on EC2..."
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null mutuwa@${{ secrets.SERVER_HOST }} "
            for file in /var/www/html/Mobile/SIL/*; do
              if [[ -f \$file ]]; then
                mv \$file \${file}.4-sure.bak.\$(date +'%Y%m%d%H%M%S')
              fi
            done
          "
          echo "Deploying new SIL APK to the server..."
          scp -r -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null "$GITHUB_WORKSPACE/SIL"/* mutuwa@${{ secrets.SERVER_HOST }}:/var/www/html/Mobile/SIL/

      - name: Restart Nginx
        run: |
          echo "Restarting Nginx..."
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null mutuwa@${{ secrets.SERVER_HOST }} "echo '${{ secrets.SUDO_PASSWORD }}' | sudo -S systemctl restart nginx"
